@model EPS3.ViewModels.ContractViewModel

@{
    ViewData["Title"] = "Edit Contract Information";
}
<script>
    $(document).ready(function () {
        initContractControls();
    });
</script>

<form asp-action="Edit">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" name="Contract.ContractID" id="Contract_ContractID" value="@Model.Contract.ContractID" />
    <input type="hidden" name="Contract.UserID" id="Contract_UserID" value="@ViewBag.CurrentUser.UserID" />
    <input type="hidden" name="Contract.CurrentStatus" id="Contract_CurrentStatus" value="@Model.Contract.CurrentStatus" />
    <input type="hidden" name="CurrentUserID" id="CurrentUserID" value="@ViewBag.CurrentUser.UserID" />
    <div class="panel panel-default" data-toggle="collapse" aria-expanded="true">
        <div class="panel-heading">
            <div class="float-right align-top paddingright">
                <strong>Originator:</strong> <a href="mailto:@ViewBag.CurrentUser.Email">@ViewBag.CurrentUser.FirstName @ViewBag.CurrentUser.LastName</a> (@ViewBag.CurrentUser.UserLogin) @ViewBag.CurrentUser.Phone<br />
                @DateTime.Now.Date.ToShortDateString()
            </div>
            <h3>
                Contract - @Html.DisplayFor(model => model.Contract.ContractNumber)
            </h3>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-3">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.ContractNumber)
                        </dt>
                        <dd>
                            @if (Model.Contract.CurrentStatus.Equals(ConstantStrings.ContractDrafted) || Model.Contract.CurrentStatus.Equals(ConstantStrings.ContractNew))
                            {
                                @Html.TextBoxFor(model => model.Contract.ContractNumber, new { style = "text-transform:uppercase" })
                            }
                            else
                            {
                                @Html.ValueFor(model => model.Contract.ContractNumber)
                                @Html.HiddenFor(model => model.Contract.ContractNumber)
                            }
                            @Html.ValidationMessageFor(model => model.Contract.ContractNumber, "A Contract Number is required.")
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-3">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.ContractTypeID)
                            <span title="Please begin typing and select a Contract Type from the list of options."><img src="~/images/Icons/EPS_Info.png" alt="Info" height="14" width="16" /></span>
                        </dt>
                        <dd>
                            <div>
                                <input type="hidden" id="Contract_ContractTypeID" name="Contract.ContractTypeID" value="@Model.Contract.ContractTypeID" />
                                <input type="hidden" id="ContractTypeID" name="ContractTypeID" value="@Model.Contract.ContractTypeID" />
                                <input type="text" size="50" class="form-control" id="ContractTypeSelector" name="ContractTypeSelector" value="@ViewBag.myContractType.ContractTypeSelector" style="text-transform:uppercase" />
                                <span id="ContractTypeClear" style="margin-right : 10px; vertical-align: text-bottom"><img src="~/images/Icons/EPS_Close.png" alt="Clear" height="16" width="20" /></span>
                                @Html.ValidationMessageFor(model => model.Contract.ContractTypeID, "A Contract Type is required.")
                            </div>
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-3">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.IsRenewable)
                        </dt>
                        <dd>
                            @if (Model.Contract.IsRenewable > 0) 
                            {
                                <div class="custom-control custom-radio">
                                        Yes <input id="IsRenewable1" name="IsRenewable" type="radio" class="custom-control-input" checked value="1">
                                        No &nbsp;<input id="IsRenewable0" name="IsRenewable" type="radio" class="custom-control-input" value="0">
                                </div>
                            }
                            else
                            {
                                <div class="custom-control custom-radio">
                                        Yes <input type="radio" class="custom-control-input" id="IsRenewable1" name="IsRenewable" value="1" />
                                        No &nbsp;<input type="radio" class="custom-control-input" id="IsRenewable0" name="IsRenewable" checked value="0" />
                                </div>
                            }
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.ContractTotal)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="ContractTotal">
                                    <span class="btn btn-default"><img src="~/images/Icons/EPS_Dollar.png" alt="$" height="16" width="20" /></span>
                                    @Html.TextBoxFor(model => model.Contract.ContractTotal, new { @class="currency"})
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.Contract.ContractTotal, "The Contract Total is the sum of all associated encumbrance request.")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.MaxLoaAmount)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="MaxLoaAmount">
                                    <span class="btn btn-default"><img src="~/images/Icons/EPS_Dollar.png" alt="$" height="16" width="20" /></span>
                                    @Html.TextBoxFor(model => model.Contract.MaxLoaAmount)
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.Contract.MaxLoaAmount, "The default Maximum amount per LOA is $0.00.")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.BudgetCeiling)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="BudgetCeiling">
                                    <span class="btn btn-default"><img src="~/images/Icons/EPS_Dollar.png" alt="$" height="16" width="20" /></span>
                                    @Html.TextBoxFor(model => model.Contract.BudgetCeiling)
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.Contract.BudgetCeiling, "The default Budget Ceiling is $0.00.")
                            <div id="budgetCeilingMessage" class="error"></div>
                        </dd>
                        <dt>
                            Total of Encumbrance Requests
                        </dt>
                        <dd>
                            <b style="font-size: 1.2em;"> @string.Format("{0:C}", ViewBag.ContractAmount)</b>
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-2">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.BeginningDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.Contract.BeginningDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="Contract_BeginningDate">
                                        <span class="btn btn-default"><img src="~/images/Icons/EPS_Calendar.png" alt="Calendar" height="16" width="20" /></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Contract.BeginningDate, "")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.EndingDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.Contract.EndingDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="Contract_EndingDate">
                                        <span class="btn btn-default"><img src="~/images/Icons/EPS_Calendar.png" alt="Calendar" height="16" width="20" /></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Contract.EndingDate, "")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.ServiceEndingDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.Contract.ServiceEndingDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="Contract_ServiceEndingDate">
                                        <span class="btn btn-default"><img src="~/images/Icons/EPS_Calendar.png" alt="Calendar" height="16" width="20" /></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.Contract.ServiceEndingDate, "")
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-5">
                    <dl>
                        <dt>
                            <label for="ProcurementID">Procurement</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("Contract.ProcurementID", new SelectList((IEnumerable<Procurement>)ViewData["Procurements"], "ProcurementID", "ProcurementSelector"))
                            @Html.ValidationMessageFor(model => model.Contract.ProcurementID, "Please select a Procurement option.")
                            <br />
                        </dd>

                        <dt>
                            <label for="CompensationID">Contract Funding Terms</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("Contract.CompensationID", new SelectList((IEnumerable<Compensation>)ViewData["Compensations"], "CompensationID", "CompensationSelector"), " ", new { @onchange = "updateBudgetCeiling()" })

                            @Html.ValidationMessageFor(model => model.Contract.CompensationID, "")
                            <br />
                        </dd>

                        <dt>
                            <label for="VendorID">Vendor <span title="Please begin typing and select a Vendor from the list of options."><img src="~/images/Icons/EPS_Info.png" alt="Info" height="14" width="16" /></span>
                            </label>
                        </dt>
                        <dd>
                            <div>
                                <input type="hidden" id="Contract_VendorID" name="Contract.VendorID" value="@Model.Contract.VendorID" />
                                <input type="hidden" id="VendorID" name="VendorID" value="@Model.Contract.VendorID" onchange="updateContractVendorID()" />
                                <input type="text" class="form-control" id="VendorSelector" name="VendorSelector" value="@ViewBag.myVendor.VendorSelector" />
                                <span id="VendorClear" style="margin-right : 10px; vertical-align: text-bottom"><img src="~/images/Icons/EPS_Close.png" alt="Clear" height="14" width="16" /></span>
                                @Html.ValidationMessageFor(model => model.Contract.VendorID, "Select AD for Advertisement.")
                            </div>
                        </dd>
                        <dd>
                            <a href="javascript:openAddVendorDialog();">Add New Vendor</a>
                        </dd>
                        <dt>
                            <label for="RecipientID">Recipient</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("Contract.RecipientID", new SelectList((IEnumerable<Recipient>)ViewData["Recipients"], "RecipientID", "RecipientSelector"))
                            @Html.ValidationMessageFor(model => model.Contract.RecipientID, "Please select a Recipient.")

                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.Contract.DescriptionOfWork)
                        </dt>
                        <dd>
                            @Html.TextAreaFor(model => model.Contract.DescriptionOfWork, new { @rows = 3, @cols = "200" })
                            @Html.ValidationMessageFor(model => model.Contract.DescriptionOfWork, "Please provide a description of the work to be completed under this contract.")
                        </dd>
                    </dl>
                </div> <!-- end  col -->
            </div> <!-- end row -->
            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <input type="submit" value="Update Contract" class="btn btn-default" />
                    </div> <!-- end form-group -->
                </div> <!-- end col -->
            </div> <!-- end row -->
        </div>
    </div>
    <div class="panel panel-default" data-toggle="collapse" aria-expanded="true">
        <div class="panel-heading">
            <h3>Encumbrance Requests</h3>
        </div>
        <div class="panel-body">
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Organization Code
                        </th>
                        <th>
                            Financial Project Number
                        </th>
                        <th>
                            State Program
                        </th>
                        <th>
                            Category
                        </th>
                        <th>
                            Work Activity
                        </th>
                        <th>
                            OCA
                        </th>
                        <th>
                            EO
                        </th>
                        <th>
                            Object
                        </th>
                        <th>
                            Fund
                        </th>
                        <th>
                            Fiscal Year
                        </th>
                        <th>
                            Amount
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (LineItem item in Model.LineItems)
                    {
                        <tr>
                            <td>
                                55-@Html.DisplayFor(modelItem => item.OrgCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FinancialProjectNumber)
                            </td>
                            <td>
                                <div class="" data-toggle="tooltip" data-placement="top" title="@item.StateProgram.ProgramName">
                                    @Html.DisplayFor(modelItem => item.StateProgram.ProgramCode)
                                </div>
                            </td>
                            <td>
                                <div class="" data-toggle="tooltip" data-placement="top" title="@item.Category.CategoryName">
                                    @Html.DisplayFor(modelItem => item.Category.CategoryCode)
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.WorkActivity)
                            </td>
                            <td>
                                <div class="" data-toggle="tooltip" data-placement="top" title="@item.OCA.OCAName">
                                    @Html.DisplayFor(modelItem => item.OCA.OCACode)
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ExpansionObject)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FlairObject)
                            </td>
                            <td>
                                <div class="" data-toggle="tooltip" data-placement="top" title="@item.Fund.FundDescription">
                                    @Html.DisplayFor(modelItem => item.Fund.FundCode)
                                </div>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FiscalYearRange)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Amount)
                            </td>
                            <td>
                                <a asp-controller="LineItemGroups" asp-action="Manage" asp-route-id="@item.LineItemGroupID">Edit</a> 
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</form>


<div id="addVendorDialog" title="Add New Vendor" style="display: none;">
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>Add New Vendor</h4>
        </div>
        <div class='panel-body'>
            <form asp-controller="Vendors" asp-action="Create" id="AddVendorForm" name="AddVendorForm">
                <label for="VendorCode">Vendor Number:</label>
                <input type="text" name="VendorCode" id="VendorCode" width="100" style="text-transform:uppercase" />
                <br />
                <label for="VendorName">Vendor Name:</label>
                <input type="text" name="VendorName" id="VendorName" width="350" />
                <br />
                <div id="vendorMessage" name="vendorMessage"></div>
                <br />
                <input type='hidden' id='ContractID' name="ContractID" value='@ViewBag.Contract.ContractID' />
                <input type='button' value='Add Vendor' class='btn btn-default' onclick='addNewVendor()' />
            </form>
        </div> <!-- end panel body -->
    </div> <!-- end panel -->
</div> <!-- end AddVendor dialog -->
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
