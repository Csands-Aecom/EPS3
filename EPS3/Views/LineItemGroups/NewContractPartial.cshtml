@model EPS3.Models.Contract

<form asp-action="Create">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" name="UserID" id="UserID" value="@ViewBag.CurrentUser.UserID" />
    <input type="hidden" name="CurrentStatus" id="CurrentStatus" value="New" />
    <div class="panel panel-default">
        <div class="panel-heading"></div>
        <div class="panel-body">
            <div class="row">
                <div class="col-sm-3">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.ContractNumber)
                        </dt>
                        <dd>
                            @Html.TextBoxFor(model => model.ContractNumber, new { style = "text-transform:uppercase", @onchange = "findMatchingContract()" })
                            @Html.ValidationMessageFor(model => model.ContractNumber, "A five character Contract Number is required.")
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-3">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.ContractTypeID)
                            <span class="glyphicon glyphicon-info-sign" title="Please begin typing and select a Contract Type from the list of options."></span>
                        </dt>
                        <dd>
                            @if (Model != null) {
                                <input type="hidden" id="ContractTypeID" name="ContractTypeID" value="@Model.ContractTypeID" />
                                <input type="text" id="ContractTypeSelector" name="ContractTypeSelector" value="@Model.ContractType.ContractTypeSelector" style="text-transform:uppercase" />
                            } else {
                                <input type="hidden" id="ContractTypeID" name="ContractTypeID" />
                                <input type="text" id="ContractTypeSelector" name="ContractTypeSelector" style="text-transform:uppercase" />
                            }
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-4">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.IsRenewable)
                        </dt>
                        <dd>
                                @if(Model != null) {
                                    @if (Model.IsRenewable > 0) {
                                        <div class="custom-control custom-radio">
                                               Yes <input id="IsRenewable1" name="IsRenewable" type="radio" class="custom-control-input " checked value="1">
                                               No &nbsp;<input id="IsRenewable0" name="IsRenewable" type="radio" class="custom-control-input " value="0">
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="custom-control custom-radio">
                                                Yes <input type="radio" class="custom-control-input" id="IsRenewable1" name="IsRenewable" value="1" />
                                                No &nbsp;<input type="radio" class="custom-control-input" id="IsRenewable0" name="IsRenewable" value="0" />
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="custom-control custom-radio">
                                            Yes <input id="IsRenewable1" name="IsRenewable" type="radio" class="custom-control-input " value="1">
                                            No &nbsp;<input id="IsRenewable0" name="IsRenewable" type="radio" class="custom-control-input " value="0">
                                    </div>
                                }
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-2">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.ContractTotal)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="ContractTotal">
                                    <span class="glyphicon glyphicon-usd btn btn-default"></span>
                                    @Html.TextBoxFor(model => model.ContractTotal, new { Value = "0.00" })
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.ContractTotal, "The default Contract Total is $0.00.")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.MaxLoaAmount)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="MaxLoaAmount">
                                    <span class="glyphicon glyphicon-usd btn btn-default"></span>
                                    @Html.TextBoxFor(model => model.MaxLoaAmount, new { Value = "0.00" })
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.MaxLoaAmount, "The default Maximum amount per LOA is $0.00.")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.BudgetCeiling)
                        </dt>
                        <dd>
                            <span class="input-group-addon">
                                <label for="BudgetCeiling">
                                    <span class="glyphicon glyphicon-usd btn btn-default"></span>
                                    @Html.TextBoxFor(model => model.BudgetCeiling, new { Value = "0.00" })
                                </label>
                            </span>
                            @Html.ValidationMessageFor(model => model.BudgetCeiling, "The default Budget Ceiling is $0.00.")
                            <div id="budgetCeilingMessage" class="error"></div>
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-2">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.BeginningDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.BeginningDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="BeginningDate">
                                        <span class="glyphicon glyphicon-calendar btn btn-default"></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.BeginningDate, "")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.EndingDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.EndingDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="EndingDate">
                                        <span class="glyphicon glyphicon-calendar btn btn-default"></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.EndingDate, "")
                        </dd>
                        <dt>
                            @Html.DisplayNameFor(model => model.ServiceEndingDate)
                        </dt>
                        <dd>
                            <div class="input-group date">
                                @Html.TextBoxFor(model => model.ServiceEndingDate, "{0:MM/dd/yyyy}", new { @class = "datepicker" })
                                <span class="input-group-addon">
                                    <label for="ServiceEndingDate">
                                        <span class="glyphicon glyphicon-calendar btn btn-default"></span>
                                    </label>
                                </span>
                            </div>
                            @Html.ValidationMessageFor(model => model.ServiceEndingDate, "")
                        </dd>
                    </dl>
                </div>
                <div class="col-sm-5">
                    <dl>
                        <dt>
                            <label for="ProcurementID">Procurement</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("ProcurementID", new SelectList((IEnumerable<Procurement>)ViewData["Procurements"], "ProcurementID", "ProcurementSelector"), " ")
                            @Html.ValidationMessageFor(model => model.ProcurementID, "Please select a Procurement option.")
                        </dd>
                        <p></p>
                        <dt>
                            <label for="CompensationID">Contract Funding Terms</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("CompensationID", new SelectList((IEnumerable<Compensation>)ViewData["Compensations"], "CompensationID", "CompensationSelector"), " ", new { @onchange = "updateBudgetCeiling()" })

                            @Html.ValidationMessageFor(model => model.CompensationID, "")
                        </dd>
                        <p></p>
                        <form class="vendorForm" action="#" method="post">
                            <dt>
                                <label for="VendorID">Vendor</label>
                                <span class="glyphicon glyphicon-info-sign" title="Please begin typing and select a Vendor from the list of options."></span>
                            </dt>
                            <dd>
                                @if (Model != null) {
                                <input type="hidden" id="VendorID" name="VendorID" value="@Model.VendorID" />
                                <input type="text" id="VendorSelector" name="VendorSelector" value="@Model.Vendor.VendorSelector" />
                                } else {
                                <input type="hidden" id="VendorID" name="VendorID" />
                                <input type="text" id="VendorSelector" name="VendorSelector" />
                                }
                                <br />If the Vendor is not known, select <strong><em>AD</em></strong>.
                            </dd>
                        </form>
                        <dd>
                            <a href="javascript:openAddVendorPanel();">Add New Vendor</a>
                        </dd>
                        <p></p>
                        <div id="addVendorPanel" title="Add New Vendor" style="display: none;">
                            <div class="panel panel-default">
                                <div class="panel-heading">
                                    <h4>Add New Vendor</h4>
                                </div>
                                <div class='panel-body'>
                                    <label for="VendorCode">Vendor Number:</label>
                                    <input type="text" name="VendorCode" id="VendorCode" width="100" style = "text-transform:uppercase" />
                                    <br />
                                    <label for="VendorName">Vendor Name:</label>
                                    <input type="text" name="VendorName" id="VendorName" width="350" />
                                    <br />
                                    <br />
                                    <input type='button' value='Cancel' class='btn btn-default' onclick='hideAddVendorPanel()' />
                                    <input type='button' value='Add Vendor' class='btn btn-default' onclick='addNewVendor()' />
                                </div> <!-- end panel body -->
                            </div> <!-- end panel -->
                        </div> <!-- end AddVendor dialog -->
                        <dt>
                            <label for="RecipientID">Recipient</label>
                        </dt>
                        <dd>
                            @Html.DropDownList("RecipientID", new SelectList((IEnumerable<Recipient>)ViewData["Recipients"], "RecipientID", "RecipientSelector"), " ")
                            @Html.ValidationMessageFor(model => model.RecipientID, "Please select a Recipient.")

                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-12">
                    <dl>
                        <dt>
                            @Html.DisplayNameFor(model => model.DescriptionOfWork)
                        </dt>
                        <dd>
                            @Html.TextAreaFor(model => model.DescriptionOfWork, new { @rows = "3", @cols = "200", style = "min-width: 80%" })
                            @Html.ValidationMessageFor(model => model.DescriptionOfWork, "Please provide a description of the work to be completed under this contract.")
                        </dd>
                    </dl>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-8">
                    <span id="messageSpanContract"></span>
                </div>
            </div>
        </div> <!-- end panel body -->
    </div> <!-- end panel -->
</form>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
